<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>command line on NixBytes</title>
    
    
    
    <link>/tags/command-line/</link>
    <description>Recent content in command line on NixBytes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/command-line/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker Update Images</title>
      <link>/posts/docker-update-images/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/docker-update-images/</guid>
      <description>
        
          
          
          
        
        
        
          A great way to update docker images is to use this one-liner. Since, docker does not have a command; this command will update images that you have already pulled. The only way is to pull all images again using docker pull command. This simple one-liner can help you update all images at once.
docker images |grep -v REPOSITORY|awk &#39;{print $1}&#39;|xargs -L1 docker pull 
          
        
        </description>
    </item>
    
    <item>
      <title>Aws Cloud Tools</title>
      <link>/posts/aws-cloud/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/aws-cloud/</guid>
      <description>
        
          
          
          
        
        
        
          AWS Cloud The AWS Command Line Interface (CLI) is a unified tool to manage your AWS services. With just one tool to download and configure, you can control multiple AWS services from the command line and automate them through scripts. Now in day scripting is mostly tie to automation. as I alway say, if you can type, you script it and finally you can automate. That why shell interface is so vital in today technology,
          
        
        </description>
    </item>
    
  </channel>
</rss>