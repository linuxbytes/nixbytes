<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>substitution on NixBytes</title>
    
    
    
    <link>/tags/substitution/</link>
    <description>Recent content in substitution on NixBytes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/substitution/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Process Substitution</title>
      <link>/posts/process-substitution/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/process-substitution/</guid>
      <description>
        
          
          
          
        
        
        
          In the shell piping, the stdout of a command into the stdin is a powerful technique in the terminal. But, what happens if you need to pipe the stdout of multiple commands, for example comparing and sort text data? Let use an example of where process substitution can be used.
example:
&amp;lt;(list) or &amp;gt;(list) Now let try view the lines unique to each of these two unsorted files with using process substitution.
          
        
        </description>
    </item>
    
  </channel>
</rss>